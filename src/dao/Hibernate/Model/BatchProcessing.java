package dao.Hibernate.Model;

import java.math.BigDecimal;
import java.util.Date;

// Generated 18 juin 2009 15:40:33 by Hibernate Tools 3.2.2.GA

/**
 * BatchProcessing generated by hbm2java
 */
public class BatchProcessing implements java.io.Serializable {

	private BatchProcessingId id;
	private Integer numberRecordProcessed;
	private Integer numberRecordValid;
	private Integer numberRecordReject;
	private BigDecimal percentageSuccess;
	private BigDecimal percentageCompletion;
	private Date businessDate;

	public BatchProcessing() {
	}

	public BatchProcessing(BatchProcessingId id, Integer numberRecordProcessed,
			Integer numberRecordValid, Integer numberRecordReject,
			BigDecimal percentageSuccess, BigDecimal percentageCompletion,
			Date businessDate) {
		this.id = id;
		this.numberRecordProcessed = numberRecordProcessed;
		this.numberRecordValid = numberRecordValid;
		this.numberRecordReject = numberRecordReject;
		this.percentageSuccess = percentageSuccess;
		this.percentageCompletion = percentageCompletion;
		this.businessDate = businessDate;
	}

	public BatchProcessingId getId() {
		return this.id;
	}

	public void setId(BatchProcessingId id) {
		this.id = id;
	}
	
	public Integer getNumberRecordProcessed() {
		return this.numberRecordProcessed;
	}

	public void setNumberRecordProcessed(Integer numberRecordProcessed) {
		this.numberRecordProcessed = numberRecordProcessed;
	}

	public Integer getNumberRecordValid() {
		return this.numberRecordValid;
	}

	public void setNumberRecordValid(Integer numberRecordValid) {
		this.numberRecordValid = numberRecordValid;
	}

	public Integer getNumberRecordReject() {
		return this.numberRecordReject;
	}

	public void setNumberRecordReject(Integer numberRecordReject) {
		this.numberRecordReject = numberRecordReject;
	}

	public BigDecimal getPercentageSuccess() {
		return this.percentageSuccess;
	}

	public void setPercentageSuccess(BigDecimal percentageSuccess) {
		this.percentageSuccess = percentageSuccess;
	}

	public BigDecimal getPercentageCompletion() {
		return this.percentageCompletion;
	}

	public void setPercentageCompletion(BigDecimal percentageCompletion) {
		this.percentageCompletion = percentageCompletion;
	}

	public Date getBusinessDate() {
		return this.businessDate;
	}

	public void setBusinessDate(Date businessDate) {
		this.businessDate = businessDate;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((businessDate == null) ? 0 : businessDate.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime
				* result
				+ ((numberRecordProcessed == null) ? 0 : numberRecordProcessed
						.hashCode());
		result = prime
				* result
				+ ((numberRecordReject == null) ? 0 : numberRecordReject
						.hashCode());
		result = prime
				* result
				+ ((numberRecordValid == null) ? 0 : numberRecordValid
						.hashCode());
		result = prime
				* result
				+ ((percentageCompletion == null) ? 0 : percentageCompletion
						.hashCode());
		result = prime
				* result
				+ ((percentageSuccess == null) ? 0 : percentageSuccess
						.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final BatchProcessing other = (BatchProcessing) obj;
		if (businessDate == null) {
			if (other.businessDate != null)
				return false;
		} else if (!businessDate.equals(other.businessDate))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (numberRecordProcessed == null) {
			if (other.numberRecordProcessed != null)
				return false;
		} else if (!numberRecordProcessed.equals(other.numberRecordProcessed))
			return false;
		if (numberRecordReject == null) {
			if (other.numberRecordReject != null)
				return false;
		} else if (!numberRecordReject.equals(other.numberRecordReject))
			return false;
		if (numberRecordValid == null) {
			if (other.numberRecordValid != null)
				return false;
		} else if (!numberRecordValid.equals(other.numberRecordValid))
			return false;
		if (percentageCompletion == null) {
			if (other.percentageCompletion != null)
				return false;
		} else if (!percentageCompletion.equals(other.percentageCompletion))
			return false;
		if (percentageSuccess == null) {
			if (other.percentageSuccess != null)
				return false;
		} else if (!percentageSuccess.equals(other.percentageSuccess))
			return false;
		return true;
	}
	
	

}
